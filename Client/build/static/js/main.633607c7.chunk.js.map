{"version":3,"sources":["services/shared/api.js","services/Category/index.js","components/Category/Edit/index.js","components/Category/Add/index.js","components/Category/List/index.js","services/User/index.js","components/User/Login/index.js","components/App/index.js","index.js"],"names":["TOKEN_KEY","api","axios","create","baseURL","headers","interceptors","request","use","a","config","token","localStorage","getItem","Authorization","console","log","CategoryDataService","getAll","get","id","data","post","update","put","remove","delete","findByName","name","Edit","props","useState","currentCategory","setCurrentCategory","message","setMessage","useEffect","match","params","then","response","catch","e","className","htmlFor","type","value","onChange","event","target","onClick","history","push","Add","initialCategoryState","category","setCategory","submitted","setSubmitted","required","List","categorys","setCategorys","currentIndex","setCurrentIndex","searchName","setSearchName","retrieveCategorys","placeholder","map","index","style","cursor","setActiveCategory","to","UserDataService","login","Login","password","user","setUser","handleInputChange","setItem","result","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.633607c7.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const TOKEN_KEY = \"@api_rest\";\r\nexport const getToken = () => localStorage.getItem(TOKEN_KEY);\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:5000/\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n  },\r\n});\r\n\r\napi.interceptors.request.use(async (config) => {\r\n  const token = getToken();\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  console.log(config.headers.Authorization);\r\n  return config;\r\n});\r\n\r\nexport default api;\r\n","import api from \"../shared/api\";\r\n\r\nconst getAll = () => {\r\n  return api.get(\"/category\");\r\n};\r\n\r\nconst get = (id) => {\r\n  return api.get(`/category/${id}`);\r\n};\r\n\r\nconst create = (data) => {\r\n  return api.post(\"/category\", data);\r\n};\r\n\r\nconst update = (id, data) => {\r\n  return api.put(`/category/${id}`, data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  return api.delete(`/category/${id}`);\r\n};\r\n\r\nconst findByName = (name) => {\r\n  return api.get(`/category/GetByName/${name}`);\r\n};\r\n\r\nconst CategoryDataService = {\r\n  getAll,\r\n  get,\r\n  create,\r\n  update,\r\n  remove,\r\n  findByName,\r\n};\r\n\r\nexport default CategoryDataService;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CategoryDataService from \"../../../services/Category/index\";\r\n\r\nconst Edit = props => {\r\n  \r\n  /**\r\n    initialCategoryState tem o mesmo efeito semântico daquele explicado \r\n    para initialCategoryState no componente Add.\r\n   */\r\n\r\n  const initialCategoryState = {\r\n    id: null,\r\n    name: \"\"\r\n  };\r\n\r\n  /**\r\n   Definição dos atributos (e valoração inicial) que irão abstrair o estado do\r\n   componente por meio do hook useState.\r\n   */\r\n\r\n  const [currentCategory, setCurrentCategory] = useState(initialCategoryState);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  /**\r\n   getCategory implementa lógica de recuperação de dados\r\n   de uma categoria. Recuperados os dados de um registro\r\n   de categoria, esse são utilizados para popular\r\n   os campos do formulário implementado no componente Edit.\r\n   */\r\n\r\n  const getCategory = id => {\r\n    CategoryDataService.get(id)\r\n      .then(response => {\r\n        setCurrentCategory(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  /** \r\n   O hook useEffect recebe como parâmetro uma definição de uma função anônima \r\n   ou um ponteiro para uma função. A função passada como primeiro parâmetro será\r\n   executada logo após a primeira renderização do componente e toda vez que o respectivo componente\r\n   sofre uma mutação, seja por modificação de props ou state.\r\n   Este hook prevê ainda um segundo argumento em forma de array de variáveis. \r\n   Se você definir o segundo argumento, o useEffect só executará a função passada no primeiro parâmetro se as variáveis\r\n   do definidas no segundo parâmetro deste hooks sofra uma alteração.\r\n   O emprego do useEffect neste componente segue a seguinte lógica: execute getCategory\r\n   após a primeira renderização do componente Edit. Como definimos o segundo parâmetro\r\n   para este hook, a lógica é incrementada da seguinte forma: re-execute getCategory toda\r\n   vez que Edit receber um 'id' diferente via props.match.params.\r\n   Lembre-se que match faz referência a URL corrente e match.params\r\n   ao parâmetros definidos na URL. Falei sobre isso na apostila de React Hooks.\r\n  */\r\n\r\n  useEffect(() => {\r\n    getCategory(props.match.params.id);\r\n  }, [props.match.params.id]);\r\n\r\n  /**\r\n    Mesma lógica já descrita no componente User/Login.\r\n   */\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCurrentCategory({ ...currentCategory, [name]: value });\r\n  };\r\n\r\n  /**\r\n    Implementa a lógica de execução de um endpoint PUT Category com o Web Service.\r\n   */\r\n\r\n  const updateCategory = () => {\r\n    CategoryDataService.update(currentCategory.id, currentCategory)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setMessage(\"The category was updated successfully!\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  /**\r\n    Implementa a lógica de execução de um endpoint DELETE Category com o Web Service.\r\n   */\r\n\r\n  const deleteCategory = () => {\r\n    CategoryDataService.remove(currentCategory.id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        props.history.push(\"/category\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  /**\r\n   Renderização seletiva do componente com base \r\n   nos valores de currentCategory. Se os atributos\r\n   de currentCategory não estão vazios, a expressão\r\n   relacional {currentCategory ? (1) : (2)}\r\n   executa o bloco 1, caso contrário, o bloco 2 é \r\n   executado. Caso não tenha compreendido,\r\n   expliquei sobre renderização seletiva na \r\n   apostila de React Hooks. Pesquise também\r\n   sobre o operador relacional ternário do JS.\r\n   */\r\n\r\n  return (\r\n    <div>\r\n    {currentCategory ? (\r\n      <div className=\"edit-form\">\r\n        <h4>Category</h4>\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={currentCategory.name}\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n        </form>\r\n\r\n        <button className=\"badge badge-danger mr-2\" onClick={deleteCategory}>\r\n          Delete\r\n        </button>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"badge badge-success\"\r\n          onClick={updateCategory}\r\n        >\r\n          Update\r\n        </button>\r\n        <p>{message}</p>\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <br />\r\n        <p>Please click on a Category...</p>\r\n      </div>\r\n    )}\r\n  </div>\r\n);\r\n\r\n};\r\n\r\nexport default Edit;","import React, { useState } from \"react\";\r\nimport CategoryDataService from \"../../../services/Category/index\";\r\n\r\nconst Add = () => {\r\n  \r\n\r\n  /**\r\n    Definição do JSON com as definições do\r\n    estado inicial do componente Add.\r\n   */\r\n  \r\n  const initialCategoryState = {id: null, name: \"\"};\r\n\r\n  /**\r\n    Atribuição de um JSON ao atributo 'category'\r\n    do componente Add. Este JSON abstrai os\r\n    atributos de CategoryResource do Web Service\r\n    para garantir a interoperabilidade.\r\n   */\r\n\r\n  const [category, setCategory] = useState(initialCategoryState);\r\n\r\n  /**\r\n    submitted é um atributo utilizado para suportar\r\n    a manipulação da renderização seletiva deste \r\n    componente.\r\n   */\r\n\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  /**\r\n    Mesma lógica já descrita no componente User/Login.\r\n   */\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCategory({ ...category, [name]: value });\r\n  };\r\n\r\n\r\n  /**\r\n    Função com a especificação da lógica de envio \r\n    de dados para salvar uma categoria junto ao Web \r\n    Service.\r\n   */\r\n\r\n  const saveCategory = () => {\r\n    var data = {\r\n      name: category.name\r\n    };\r\n\r\n    CategoryDataService.create(data)\r\n      .then(response => {\r\n        setCategory({\r\n          id: response.data.id,\r\n          name: response.data.name\r\n        });\r\n        setSubmitted(true);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  /**\r\n    Função a ser ativada após um\r\n    save bem sucedido de categoria.\r\n    Reseta o componente para o seu estado\r\n    inicial, de tal forma\r\n    que a renderização seletiva\r\n    possa montar novamente o \r\n    formulário de save de categoria.\r\n   */\r\n\r\n  const newCategory = () => {\r\n    setCategory(initialCategoryState);\r\n    setSubmitted(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"submit-form\">\r\n      {submitted ? (\r\n        <div>\r\n          <h4>You submitted successfully!</h4>\r\n          <button className=\"btn btn-success\" onClick={newCategory}>\r\n            Add\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"name\"\r\n              required\r\n              value={category.name}\r\n              onChange={handleInputChange}\r\n              name=\"name\"\r\n            />\r\n          </div>\r\n\r\n          <button onClick={saveCategory} className=\"btn btn-success\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Add;","import React, { useState, useEffect } from \"react\";\r\nimport CategoryDataService from \"../../../services/Category/index\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nconst List = () => {\r\n\r\n  /**\r\n    definição dos atributos que irão abstrair o estado do componente List.\r\n   */\r\n\r\n  const [categorys, setCategorys] = useState([]);\r\n  const [currentCategory, setCurrentCategory] = useState(null);\r\n  const [currentIndex, setCurrentIndex] = useState(-1);\r\n  const [searchName, setSearchName] = useState(\"\");\r\n\r\n  /**\r\n    A lógica deste hook foi explicada na apostila e no componente Edit.\r\n    A sua aplicação neste componente é a de fazer com que retrieveCategorys\r\n    seja executado toda vez que List seja montado na UI da aplicação. Como \r\n    o segundo parâmetro foi definido com um array vazio, o useEffect\r\n    não irá re-executar retrieveCategorys a cada mutação de List.\r\n   */\r\n\r\n  useEffect(() => {\r\n    retrieveCategorys();\r\n  }, []);\r\n\r\n  /**\r\n    Fornece lógica para tratar a mudança de valoração\r\n    capturada do input e passada para o atributo searchName.\r\n    Lembre-se que a cada execução desta função, alteramos o estado\r\n    do componente.\r\n   */\r\n\r\n  const onChangeSearchName = e => {\r\n    const searchName = e.target.value;\r\n    setSearchName(searchName);\r\n  };\r\n\r\n  /**\r\n    Lógica de consumo do endpoint GetAll Categories.\r\n   */\r\n\r\n  const retrieveCategorys = () => {\r\n    CategoryDataService.getAll()\r\n      .then(response => {\r\n        setCategorys(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  /**\r\n    Lógica para tratar a lógica de interação do usuário para com a lista\r\n    de componentes, preparando a UI para habilitar a capacidade de o usuário\r\n    editar ou deletar uma categoria.\r\n   */\r\n\r\n  const setActiveCategory = (category, index) => {\r\n    setCurrentCategory(category);\r\n    setCurrentIndex(index);\r\n  };\r\n\r\n  /**\r\n    Lógica para tratar filtragem da lista de categorias consumindo o endpoint\r\n    encapsulado em CategoryDataService.findByName.\r\n   */\r\n\r\n  const findByName = () => {\r\n\r\n    if(searchName !== ''){\r\n    CategoryDataService.findByName(searchName)\r\n      .then(response => {\r\n        setCategorys(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }else{\r\n      retrieveCategorys();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"list row\">\r\n      <div className=\"col-md-8\">\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search by name\"\r\n            value={searchName}\r\n            onChange={onChangeSearchName}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              onClick={findByName}\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        <h4>Categorys List</h4>\r\n\r\n        <ul className=\"list-group\">\r\n          {categorys &&\r\n            categorys.map((category, index) => (\r\n              <li\r\n                className={\r\n                  \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\r\n                }\r\n                style={{cursor:'pointer'}}\r\n                onClick={() => setActiveCategory(category, index)}\r\n                key={index}\r\n              >\r\n                {category.name}\r\n              </li>\r\n            ))}\r\n        </ul>\r\n\r\n        \r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        {currentCategory ? (\r\n          <div>\r\n            <h4>Category</h4>\r\n            <div>\r\n              <label>\r\n                <strong>Name:</strong>\r\n              </label>{\" \"}\r\n              {currentCategory.name}\r\n            </div>\r\n            \r\n            <Link\r\n              to={\"/category/\" + currentCategory.id}\r\n              className=\"badge badge-warning\"\r\n            >\r\n              Edit\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Category...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;","import api from \"../shared/api\";\r\n\r\nconst login = (data) => {\r\n  return api.post(\"/api/authentication/\", data);\r\n};\r\n\r\nconst UserDataService = {\r\n  login,\r\n};\r\n\r\nexport default UserDataService;\r\n","import React, { useState } from \"react\";\r\nimport UserDataService from \"../../../services/User/index\";\r\nimport {TOKEN_KEY} from \"../../../services/shared/api\";\r\n\r\nconst Login = props => {\r\n\r\n  /**\r\n    Atribuição de um JSON ao atributo 'user'\r\n    do componente Login. Este JSON abstrai os\r\n    atributos de UserResource no Web Service\r\n    para garantir a interoperabilidade..\r\n   */\r\n\r\n  const [user, setUser] = useState({ id: null, login: \"\", password: \"\"});\r\n\r\n  /**\r\n    Definição de uma função para tratar (handle) \r\n    a ação de alteração do valor de um input.\r\n    Via atribuição por desestruturação, é\r\n    possível atribuir uma chave e seu valor\r\n    a duas variáveis homônimas com o event.target.\r\n    Utilizamos ainda o operador spread para\r\n    atribuir corretamente ao atributo 'user'\r\n    a respectiva relação de nome de chave e \r\n    valor.\r\n   */\r\n  \r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  /**\r\n    Definição de uma função para submeter\r\n    as credenciais de login e obter um JWT\r\n    junto ao Web Service, usando para tal,\r\n    a interface (arranjo de métodos) UserDataService.\r\n    Obs: Se você não entendeu por que me referi\r\n    a UserDataService como interface, sugiro\r\n    estudar por que chamamos de interface de uma classe\r\n    os seus respectivos métodos.\r\n   */\r\n\r\n  const sendLogin = () => {\r\n    var data = {\r\n      login: user.login,\r\n      password: user.password\r\n    };\r\n\r\n    UserDataService.login(data)\r\n      .then(response => {\r\n        localStorage.setItem(TOKEN_KEY, response.data?.result?.token);\r\n        console.log(TOKEN_KEY+\": \"+localStorage.getItem(TOKEN_KEY));\r\n        props.history.push(\"/category\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  \r\n  /**\r\n    Definição do JSX\r\n    que irá dar forma visual e operacional\r\n    ao componente Login.\r\n   */\r\n  return (\r\n  <div>\r\n    \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Login</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"login\"\r\n              required\r\n              value={user.login}\r\n              onChange={handleInputChange}\r\n              name=\"login\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"password\"\r\n              required\r\n              value={user.password}\r\n              onChange={handleInputChange}\r\n              name=\"password\"\r\n            />\r\n          </div>          \r\n\r\n          <button onClick={sendLogin} className=\"btn btn-success\">\r\n            Submit\r\n          </button>\r\n        \r\n  </div>\r\n);\r\n\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport {Edit,Add,List} from \"../Category/index\";\r\nimport {Login} from \"../User/index\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./style.css\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div >\r\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n        <Link className=\"navbar-brand\" to={\"/user\"}>\r\n          Full Stack Devs\r\n        </Link>\r\n        <div className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link  to={\"/category\"} className=\"nav-link\">\r\n              Categories\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link  to={\"/add\"} className=\"nav-link\">\r\n              Add\r\n            </Link>\r\n          </li>\r\n        </div>\r\n      </nav>\r\n\r\n      <div className=\"container mt-3\">\r\n        <Switch>\r\n          <Route exact path={[\"/\", \"/user\"]} component={Login} />\r\n          <Route exact path={\"/category\"} component={List} />\r\n          <Route exact path=\"/add\" component={Add} />\r\n          <Route path=\"/category/:id\" component={Edit} />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/index';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}